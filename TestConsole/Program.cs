// See https://aka.ms/new-console-template for more information
using Backend.Models;
using Backend.Services;
using Backend.Services.Repository;
using Newtonsoft.Json;

Console.WriteLine("Creating the lesson");
LessonRepository lr = new LessonRepository();
Lesson lesson = new Lesson(LessonType.Photo,"Photo", "Photo of a dog", "C://");
lr.Add(lesson);
lesson = lr.Get(lesson.Id);
Console.WriteLine(JsonConvert.SerializeObject(lesson));
lesson.Description = "New description";
Console.WriteLine("Changing description to new description");
lr.Update(lesson);
lesson = lr.Get(lesson.Id);
Console.WriteLine(JsonConvert.SerializeObject(lesson));
Console.WriteLine("Marking as deleted");
lr.MarkAsDeleted(lesson);
lesson = lr.Get(lesson.Id);
Console.WriteLine(JsonConvert.SerializeObject(lesson));
Console.WriteLine("Creating the answer");
AnswerRepository ar = new AnswerRepository();
Answer Answer = new Answer("Sun is yellow", false,110,2,null);
ar.Add(Answer);
Answer = ar.Get(Answer.Id);
Console.WriteLine(JsonConvert.SerializeObject(Answer));
Console.WriteLine("Changing cost to 10");
Answer.Cost = 10;
ar.Update(Answer);
Answer = ar.Get(Answer.Id);
Console.WriteLine(JsonConvert.SerializeObject(Answer));
Console.WriteLine("Marking as deleted");
ar.MarkAsDeleted(Answer);
Answer = ar.Get(Answer.Id);
Console.WriteLine(JsonConvert.SerializeObject(Answer));
Console.WriteLine("Creating the certificate");
CertificateRepository cr = new CertificateRepository();
Certificate Certificate = new Certificate(1,null,"Some media templatepath", 2, null);
cr.Add(Certificate);
Certificate = cr.Get(Certificate.Id);
Console.WriteLine(JsonConvert.SerializeObject(Certificate));
Console.WriteLine("Changing courseid to 1");
Certificate.CourseId = 1;
cr.Update(Certificate);
Certificate = cr.Get(Certificate.Id);
Console.WriteLine(JsonConvert.SerializeObject(Certificate));
Console.WriteLine("Marking as deleted");
cr.MarkAsDeleted(Certificate);
Certificate = cr.Get(Certificate.Id);
Console.WriteLine(JsonConvert.SerializeObject(Certificate));
Console.WriteLine("creating the Course");
CourseRepository cor = new CourseRepository();
Course Course = new Course("20 minutes", "course for banking",null,null);
cor.Add(Course);
Course = cor.Get(Course.Id);
Console.WriteLine(JsonConvert.SerializeObject(Course));
Console.WriteLine("Changing duration to 2 hours");
Course.Duration = "2 hours";
cor.Update(Course);
Course = cor.Get(Course.Id);
Console.WriteLine(JsonConvert.SerializeObject(Course));
Console.WriteLine("Marking as deleted");
cor.MarkAsDeleted(Course);
Course = cor.Get(Course.Id);
Console.WriteLine(JsonConvert.SerializeObject(Course));
Console.WriteLine("creating the Exam");
ExamRepository er = new ExamRepository();
Exam Exam = new Exam("20 minutes", "Exam for banking", null);
er.Add(Exam);
Exam = er.Get(Exam.Id);
Console.WriteLine(JsonConvert.SerializeObject(Exam));
Console.WriteLine("Changing description to 2 hours");
Exam.Description = "2 hours";
er.Update(Exam);
Exam = er.Get(Exam.Id);
Console.WriteLine(JsonConvert.SerializeObject(Exam));
Console.WriteLine("Marking as deleted");
er.MarkAsDeleted(Exam);
Exam = er.Get(Exam.Id);
Console.WriteLine(JsonConvert.SerializeObject(Exam));
Console.WriteLine("creating the Question");
QuestionRepository qr = new QuestionRepository();
Question Question = new Question("Goodbyes",0,null);
qr.Add(Question);
Question = qr.Get(Question.Id);
Console.WriteLine(JsonConvert.SerializeObject(Question));
Console.WriteLine("Changing content to famous person speaking");
Question.Content = "famous person speaking";
qr.Update(Question);
Question = qr.Get(Question.Id);
Console.WriteLine(JsonConvert.SerializeObject(Question));
Console.WriteLine("Marking as deleted");
qr.MarkAsDeleted(Question);
Question = qr.Get(Question.Id);
Console.WriteLine(JsonConvert.SerializeObject(Question));
Console.WriteLine("creating the User");
UserRepository ur = new UserRepository();
User User = new User("Maximus",DateTime.Now,DateTime.Now,"Powery","Poiwer","password","login","C://",true,"power@pow.ru","Telme","junior manager",null,null,null,null,null,"not much to say");
ur.Add(User);
User = ur.Get(User.Id);
Console.WriteLine(JsonConvert.SerializeObject(User));
Console.WriteLine("Changing name to Tima");
User.Name = "Tima";
ur.Update(User);
User = ur.Get(User.Id);
Console.WriteLine(JsonConvert.SerializeObject(User));
Console.WriteLine("Marking as deleted");
ur.MarkAsDeleted(User);
User = ur.Get(User.Id);
Console.WriteLine(JsonConvert.SerializeObject(User));
Question = new Question("Goodbyes", QuestionType.Business, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.SoftSkills, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.SoftSkills, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.TimeManagement, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.TimeManagement, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.TimeManagement, null);
qr.Add(Question);
Question = new Question("Goodbyes", QuestionType.TimeManagement, null);
qr.Add(Question);
ExamCreator ec = new ExamCreator();
List<long> ids = new List<long>{0,1,2,3,4,5,6,7,8,9,10};
Exam = ec.CreateExamWithId("20 minutes", "Exam for banking",ids);
er.Add(Exam);
Exam = er.Get(Exam.Id);
Console.WriteLine(JsonConvert.SerializeObject(Exam));
